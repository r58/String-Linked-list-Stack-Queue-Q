Q) .You are given a string S of size N. Print the minimum number of characters that need to be deleted so 
that the resulting string (without changing the relative order of characters ) is palindrome.

Note: A palindrome is string that read same forward and backward eg : bccb, f, sas.


ANS = 

import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String s = sc.next();

    // Create a two-dimensional array to store the results of the DP
    int[][] dp = new int[n][n];

    // Initialize the DP array with the base cases
    for (int i = 0; i < n; i++) {
      dp[i][i] = 0;
    }
    for (int i = 0; i < n - 1; i++) {
      if (s.charAt(i) == s.charAt(i + 1)) {
        dp[i][i + 1] = 0;
      } else {
        dp[i][i + 1] = 1;
      }
    }

    // Iterate over the DP array to fill in the rest of the values
    for (int len = 3; len <= n; len++) {
      for (int i = 0; i < n - len + 1; i++) {
        int j = i + len - 1;
        if (s.charAt(i) == s.charAt(j)) {
          dp[i][j] = dp[i + 1][j - 1];
        } else {
          dp[i][j] = 1 + Math.min(dp[i + 1][j], dp[i][j - 1]);
        }
      }
    }

    // The minimum number of characters to delete is the value in the
    // bottom-right corner of the DP array
    System.out.println(dp[0][n - 1]);
  }
}